/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 12 05:21:20 GMT 2024
 */

package com.axios;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.axios.Axios;
import com.axios.core.requestMethod.RequestMethod;
import com.axios.header.Header;
import com.axios.request.Body;
import com.axios.request.Request;
import com.axios.response.Response;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Axios_ESTest extends Axios_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.OPTIONS;
      Request request0 = new Request();
      Header header0 = new Header();
      Axios axios0 = new Axios("I", requestMethod0, request0, (Body) null, header0);
      assertEquals("I", axios0.getUrl());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Axios axios0 = new Axios();
      String string0 = axios0.getUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.TRACE;
      Header header0 = new Header();
      Axios axios0 = new Axios("+11F/y)b_ZD7AUZ.t", requestMethod0, header0);
      Request request0 = new Request();
      axios0.setParam(request0);
      Request request1 = axios0.getParam();
      assertSame(request1, request0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Axios axios0 = new Axios();
      axios0.getMethod();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Axios axios0 = new Axios();
      Header header0 = axios0.getHeader();
      assertNull(header0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Axios axios0 = new Axios();
      Body body0 = new Body();
      axios0.setBody(body0);
      Body body1 = axios0.getBody();
      assertSame(body1, body0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Header header0 = new Header();
      try { 
        Axios.put("I", (Body) null, header0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.net.UnknownServiceException: protocol doesn't support output
         //
         verifyException("com.axios.core.http.HttpRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Body body0 = new Body();
      Header header0 = new Header();
      try { 
        Axios.put("PKSaKyji`M}C{9QN", body0, header0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Body body0 = new Body();
      try { 
        Axios.put("7u:>", body0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Body body0 = new Body();
      try { 
        Axios.put("", body0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Header header0 = new Header();
      try { 
        Axios.put("[Dc5z)q=l8", header0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Header header0 = new Header();
      try { 
        Axios.put("", header0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      try { 
        Axios.put("@jKlUhm&-S+Q:xZQ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      try { 
        Axios.put((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Body body0 = new Body();
      body0.setBody((Map<String, Object>) null);
      Header header0 = new Header();
      try { 
        Axios.post("Keep-Alive", body0, header0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.request.Body", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Body body0 = new Body();
      Header header0 = new Header();
      try { 
        Axios.post("", body0, header0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Body body0 = new Body();
      try { 
        Axios.post("2n,X',wU", body0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.net.UnknownServiceException: protocol doesn't support output
         //
         verifyException("com.axios.core.http.HttpRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Body body0 = new Body();
      try { 
        Axios.post("*a!:-", body0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Header header0 = new Header();
      try { 
        Axios.post("[}>,W*_w@IEI<}5", header0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Header header0 = new Header();
      try { 
        Axios.post((String) null, header0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      try { 
        Axios.post("gef!Te");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      try { 
        Axios.post("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Request request0 = new Request();
      Header header0 = new Header();
      try { 
        Axios.get("=5+PtHP", request0, header0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Request request0 = new Request();
      Header header0 = new Header();
      try { 
        Axios.get(":q~<%nS*~&P", request0, header0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Request request0 = new Request();
      Header header0 = new Header();
      try { 
        Axios.get("", request0, header0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Request request0 = new Request();
      try { 
        Axios.get("\"", request0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal character in authority at index 7: http://\"/
         //
         verifyException("com.axios.core.tool.UrlTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      try { 
        Axios.get("B", (Request) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Request request0 = new Request();
      try { 
        Axios.get("", request0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Header header0 = new Header();
      try { 
        Axios.get("es'DF?q:,7", header0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Header header0 = new Header();
      try { 
        Axios.get("OLIz85gY$Sc& sdk0W", header0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Header header0 = new Header();
      try { 
        Axios.get((String) null, header0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      try { 
        Axios.get("T~6_F{2$");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal character in authority at index 7: http://T~6_F{2$/
         //
         verifyException("com.axios.core.tool.UrlTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      try { 
        Axios.get("[O");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      try { 
        Axios.get("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Request request0 = new Request();
      Header header0 = new Header();
      try { 
        Axios.delete("t|sA~64*uaf>", request0, header0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Request request0 = new Request();
      Header header0 = new Header();
      try { 
        Axios.delete((String) null, request0, header0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Request request0 = new Request();
      try { 
        Axios.delete("5Ea.nm)t'", request0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.net.UnknownServiceException: protocol doesn't support output
         //
         verifyException("com.axios.core.http.HttpRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Request request0 = new Request();
      try { 
        Axios.delete("3LE3>cS:yT4/uKSimy<", request0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Header header0 = new Header();
      try { 
        Axios.delete("9o", header0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.net.UnknownServiceException: protocol doesn't support output
         //
         verifyException("com.axios.core.http.HttpRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Header header0 = new Header();
      try { 
        Axios.delete("{l\"efNjAGiMaF](Ja", header0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      try { 
        Axios.delete(":{4");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      try { 
        Axios.delete("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.TRACE;
      Header header0 = new Header();
      Axios axios0 = new Axios("+11F/y)b_ZD7AUZ.t", requestMethod0, header0);
      RequestMethod requestMethod1 = RequestMethod.DELETE;
      axios0.setMethod(requestMethod1);
      try { 
        axios0.body();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.net.UnknownServiceException: protocol doesn't support output
         //
         verifyException("com.axios.core.http.HttpRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.TRACE;
      Axios axios0 = new Axios("-rU", requestMethod0);
      RequestMethod requestMethod1 = RequestMethod.GET;
      axios0.setMethod(requestMethod1);
      try { 
        axios0.body();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Axios axios0 = new Axios();
      axios0.setUrl("com.axios.Axios");
      try { 
        axios0.body();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.core.connection.Connection", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Axios axios0 = new Axios();
      try { 
        axios0.body();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.TRACE;
      Axios axios0 = new Axios("-rU", requestMethod0);
      RequestMethod requestMethod1 = RequestMethod.CONNECT;
      axios0.setMethod(requestMethod1);
      try { 
        axios0.ajax();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid HTTP method: CONNECT
         //
         verifyException("com.axios.core.connection.Connection", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Axios axios0 = new Axios();
      try { 
        axios0.ajax();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.GET;
      Request request0 = new Request();
      Body body0 = new Body();
      Body body1 = body0.add("a", "a");
      Header header0 = new Header();
      Axios axios0 = null;
      try {
        axios0 = new Axios("a", requestMethod0, request0, body1, header0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.net.UnknownServiceException: protocol doesn't support output
         //
         verifyException("com.axios.core.http.HttpRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.PUT;
      Request request0 = new Request();
      Body body0 = new Body();
      Header header0 = new Header();
      Axios axios0 = null;
      try {
        axios0 = new Axios("PP\"b_Bs", requestMethod0, request0, body0, header0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.HEAD;
      Request request0 = new Request();
      Body body0 = new Body();
      Header header0 = new Header();
      Axios axios0 = null;
      try {
        axios0 = new Axios("", requestMethod0, request0, body0, header0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.DELETE;
      Request request0 = new Request();
      Header header0 = new Header();
      Axios axios0 = null;
      try {
        axios0 = new Axios("[\"l'bt2{'Bt&mYAR7@.", requestMethod0, request0, header0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.net.UnknownServiceException: protocol doesn't support output
         //
         verifyException("com.axios.core.http.HttpRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.GET;
      Request request0 = new Request();
      Header header0 = new Header();
      Axios axios0 = null;
      try {
        axios0 = new Axios("[\"l'bt2{'Bt&mYAR7@.", requestMethod0, request0, header0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.PATCH;
      Request request0 = new Request();
      Header header0 = new Header();
      Axios axios0 = null;
      try {
        axios0 = new Axios(":eXXsD>-F&?C", requestMethod0, request0, header0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.TRACE;
      Request request0 = new Request();
      Header header0 = new Header();
      Axios axios0 = null;
      try {
        axios0 = new Axios("", requestMethod0, request0, header0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.DELETE;
      Request request0 = new Request();
      Axios axios0 = null;
      try {
        axios0 = new Axios("QvW_i6XB", requestMethod0, request0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.net.UnknownServiceException: protocol doesn't support output
         //
         verifyException("com.axios.core.http.HttpRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.GET;
      Request request0 = new Request();
      Axios axios0 = null;
      try {
        axios0 = new Axios("J", requestMethod0, request0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.TRACE;
      Request request0 = new Request();
      Axios axios0 = null;
      try {
        axios0 = new Axios("6Od*:GAiEvDv4sF", requestMethod0, request0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.PATCH;
      Request request0 = new Request();
      Axios axios0 = null;
      try {
        axios0 = new Axios("", requestMethod0, request0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.OPTIONS;
      Body body0 = new Body();
      Body body1 = body0.add("iS", "iS");
      Header header0 = new Header();
      Axios axios0 = null;
      try {
        axios0 = new Axios("iS", requestMethod0, body1, header0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.net.UnknownServiceException: protocol doesn't support output
         //
         verifyException("com.axios.core.http.HttpRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.GET;
      Header header0 = new Header();
      Axios axios0 = null;
      try {
        axios0 = new Axios("een=k@", requestMethod0, (Body) null, header0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.HEAD;
      Body body0 = new Body();
      Header header0 = new Header();
      Axios axios0 = null;
      try {
        axios0 = new Axios("oqHy)p\"E", requestMethod0, body0, header0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.GET;
      Header header0 = new Header();
      Axios axios0 = null;
      try {
        axios0 = new Axios("", requestMethod0, (Body) null, header0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.DELETE;
      Axios axios0 = null;
      try {
        axios0 = new Axios("fR=5h)_", requestMethod0, (Body) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.net.UnknownServiceException: protocol doesn't support output
         //
         verifyException("com.axios.core.http.HttpRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.GET;
      Body body0 = new Body();
      Axios axios0 = null;
      try {
        axios0 = new Axios("ae", requestMethod0, body0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.OPTIONS;
      Body body0 = new Body();
      body0.setBody((Map<String, Object>) null);
      Axios axios0 = null;
      try {
        axios0 = new Axios("a$ ;", requestMethod0, body0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.request.Body", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.PATCH;
      Body body0 = new Body();
      Axios axios0 = null;
      try {
        axios0 = new Axios("", requestMethod0, body0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.TRACE;
      Header header0 = new Header();
      Axios axios0 = null;
      try {
        axios0 = new Axios("\"cxZe[-0", requestMethod0, header0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal character in authority at index 7: http://\"cxZe[-0/
         //
         verifyException("com.axios.core.tool.UrlTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.GET;
      Header header0 = new Header();
      Axios axios0 = null;
      try {
        axios0 = new Axios("+11F/y)b_ZD7AUZ.t", requestMethod0, header0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.DELETE;
      Header header0 = new Header();
      Axios axios0 = null;
      try {
        axios0 = new Axios("[\"l'b62{'Btx&mYA/7@.", requestMethod0, header0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.PATCH;
      Header header0 = new Header();
      Axios axios0 = null;
      try {
        axios0 = new Axios((String) null, requestMethod0, header0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.DELETE;
      Axios axios0 = null;
      try {
        axios0 = new Axios("COOKIE", requestMethod0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.net.UnknownServiceException: protocol doesn't support output
         //
         verifyException("com.axios.core.http.HttpRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.GET;
      Axios axios0 = null;
      try {
        axios0 = new Axios("-rU", requestMethod0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Axios axios0 = null;
      try {
        axios0 = new Axios("-rU", (RequestMethod) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.core.connection.Connection", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.POST;
      Axios axios0 = null;
      try {
        axios0 = new Axios("", requestMethod0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Axios axios0 = null;
      try {
        axios0 = new Axios("6,tR=Df@?IV[}kl!Y!h");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Axios axios0 = null;
      try {
        axios0 = new Axios("[9bk:v");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Axios axios0 = null;
      try {
        axios0 = new Axios("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Header header0 = new Header();
      RequestMethod requestMethod0 = RequestMethod.HEAD;
      Axios axios0 = new Axios("com.axios.core.config.global.GlobalHeaders", requestMethod0, header0);
      Response response0 = axios0.ajax();
      assertEquals(404, response0.getStatus());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Axios axios0 = new Axios();
      axios0.setUrl("9o");
      Request request0 = new Request();
      axios0.setParam(request0);
      try { 
        axios0.ajax();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.core.connection.Connection", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Body body0 = new Body();
      Header header0 = new Header();
      try { 
        Axios.put((String) null, body0, header0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Request request0 = new Request();
      try { 
        Axios.get("|uK", request0, (Header) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal character in authority at index 7: http://|uK/
         //
         verifyException("com.axios.core.tool.UrlTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Body body0 = new Body();
      Header header0 = new Header();
      try { 
        Axios.post("Dy&t,kf>D~+DUjID+F1", body0, header0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal character in authority at index 7: http://Dy&t,kf>D~+DUjID+F1/
         //
         verifyException("com.axios.core.tool.UrlTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.HEAD;
      Request request0 = new Request();
      Header header0 = new Header();
      Axios axios0 = new Axios("com.axios.Axios", requestMethod0, request0, header0);
      assertEquals("com.axios.Axios", axios0.getUrl());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Request request0 = new Request();
      Header header0 = new Header();
      try { 
        Axios.delete("k", request0, header0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.net.UnknownServiceException: protocol doesn't support output
         //
         verifyException("com.axios.core.http.HttpRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Header header0 = new Header();
      try { 
        Axios.get("{.#?N+fMNQDou|", header0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal character in authority at index 7: http://{./#?N+fMNQDou%7C
         //
         verifyException("com.axios.core.tool.UrlTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.GET;
      Request request0 = new Request();
      Body body0 = new Body();
      Header header0 = new Header();
      Axios axios0 = null;
      try {
        axios0 = new Axios("a", requestMethod0, request0, body0, header0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Header header0 = new Header();
      try { 
        Axios.put("com.axios.Axios", header0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.net.UnknownServiceException: protocol doesn't support output
         //
         verifyException("com.axios.core.http.HttpRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Axios axios0 = new Axios();
      Body body0 = axios0.getBody();
      assertNull(body0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      try { 
        Axios.put("LL giTEvEjJ8S8T");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal character in authority at index 7: http://LL giTEvEjJ8S8T/
         //
         verifyException("com.axios.core.tool.UrlTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Axios axios0 = new Axios();
      axios0.setUrl("");
      String string0 = axios0.getUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      try { 
        Axios.get("DELETE");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.HEAD;
      Body body0 = new Body();
      Axios axios0 = new Axios("g4", requestMethod0, body0);
      assertEquals("g4", axios0.getUrl());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Request request0 = new Request();
      try { 
        Axios.get("-rU", request0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      try { 
        Axios.post("Origin");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.net.UnknownServiceException: protocol doesn't support output
         //
         verifyException("com.axios.core.http.HttpRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.TRACE;
      Header header0 = new Header();
      Axios axios0 = new Axios("+11F/y)b_ZD7AUZ.t", requestMethod0, header0);
      String string0 = axios0.getUrl();
      assertEquals("+11F/y)b_ZD7AUZ.t", string0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Axios axios0 = new Axios();
      Header header0 = new Header();
      axios0.setHeader(header0);
      assertNull(axios0.getMethod());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Header header0 = new Header();
      try { 
        Axios.post("zZ", header0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.net.UnknownServiceException: protocol doesn't support output
         //
         verifyException("com.axios.core.http.HttpRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Body body0 = new Body();
      try { 
        Axios.post("", body0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.HEAD;
      Request request0 = new Request();
      Axios axios0 = new Axios("QvW_i6XB", requestMethod0, request0);
      axios0.setParam(request0);
      assertEquals("QvW_i6XB", axios0.getUrl());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Request request0 = new Request();
      try { 
        Axios.delete((String) null, request0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.OPTIONS;
      Body body0 = new Body();
      Header header0 = new Header();
      Axios axios0 = new Axios("com.axios.Axios", requestMethod0, body0, header0);
      assertEquals(RequestMethod.OPTIONS, axios0.getMethod());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.TRACE;
      Header header0 = new Header();
      Axios axios0 = new Axios("+11F/y)b_ZD7AUZ.t", requestMethod0, header0);
      Response response0 = axios0.body();
      assertNull(response0.getData());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.HEAD;
      Request request0 = new Request();
      Axios axios0 = new Axios("QvW_i6XB", requestMethod0, request0);
      RequestMethod requestMethod1 = axios0.getMethod();
      assertSame(requestMethod0, requestMethod1);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      try { 
        Axios.delete("}");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal character in authority at index 7: http://}/
         //
         verifyException("com.axios.core.tool.UrlTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.TRACE;
      Axios axios0 = new Axios("-rU", requestMethod0);
      Body body0 = new Body();
      axios0.setBody(body0);
      Response response0 = axios0.ajax();
      assertEquals(404, response0.getStatus());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Header header0 = new Header();
      try { 
        Axios.delete((String) null, header0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Body body0 = new Body();
      try { 
        Axios.put("QvW_i6XB", body0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.net.UnknownServiceException: protocol doesn't support output
         //
         verifyException("com.axios.core.http.HttpRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.TRACE;
      Header header0 = new Header();
      Axios axios0 = new Axios("com.axios.Axios", requestMethod0, header0);
      Header header1 = axios0.getHeader();
      assertSame(header1, header0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Axios axios0 = null;
      try {
        axios0 = new Axios("9($.54L{F4~.`SpD/");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal character in authority at index 7: http://9($.54L{F4~.`SpD//
         //
         verifyException("com.axios.core.tool.UrlTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.TRACE;
      Header header0 = new Header();
      Axios axios0 = new Axios("com.axios.Axios", requestMethod0, header0);
      Request request0 = axios0.getParam();
      assertNull(request0);
  }
}
