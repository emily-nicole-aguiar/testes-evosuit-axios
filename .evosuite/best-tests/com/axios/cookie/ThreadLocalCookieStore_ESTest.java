/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 12 05:30:18 GMT 2024
 */

package com.axios.cookie;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.axios.cookie.ThreadLocalCookieStore;
import java.net.HttpCookie;
import java.net.URI;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ThreadLocalCookieStore_ESTest extends ThreadLocalCookieStore_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ThreadLocalCookieStore threadLocalCookieStore0 = new ThreadLocalCookieStore();
      HttpCookie httpCookie0 = new HttpCookie("Op3G~_+t}", "Op3G~_+t}");
      threadLocalCookieStore0.add((URI) null, httpCookie0);
      assertEquals(1, httpCookie0.getVersion());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ThreadLocalCookieStore threadLocalCookieStore0 = new ThreadLocalCookieStore();
      URI uRI0 = MockURI.aHttpURI;
      HttpCookie httpCookie0 = new HttpCookie("Op3G~_+t}", "Op3G~_+t}");
      httpCookie0.setHttpOnly(true);
      threadLocalCookieStore0.remove(uRI0, httpCookie0);
      threadLocalCookieStore0.removeAll();
      HttpCookie httpCookie1 = new HttpCookie(">bgx4oU", ">bgx4oU");
      httpCookie1.setPath((String) null);
      threadLocalCookieStore0.getCookieStore();
      httpCookie1.setDiscard(false);
      threadLocalCookieStore0.remove((URI) null, httpCookie1);
      threadLocalCookieStore0.getCookieStore();
      httpCookie1.setDomain(">bgx4oU");
      threadLocalCookieStore0.remove((URI) null, httpCookie1);
      threadLocalCookieStore0.getURIs();
      threadLocalCookieStore0.getCookieStore();
      // Undeclared exception!
      try { 
        threadLocalCookieStore0.get((URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // uri is null
         //
         verifyException("java.net.InMemoryCookieStore", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ThreadLocalCookieStore threadLocalCookieStore0 = new ThreadLocalCookieStore();
      List<URI> list0 = threadLocalCookieStore0.getURIs();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ThreadLocalCookieStore threadLocalCookieStore0 = new ThreadLocalCookieStore();
      URI uRI0 = MockURI.aFTPURI;
      List<HttpCookie> list0 = threadLocalCookieStore0.get(uRI0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ThreadLocalCookieStore threadLocalCookieStore0 = new ThreadLocalCookieStore();
      URI uRI0 = MockURI.aFileURI;
      List<HttpCookie> list0 = threadLocalCookieStore0.get(uRI0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ThreadLocalCookieStore threadLocalCookieStore0 = new ThreadLocalCookieStore();
      // Undeclared exception!
      try { 
        threadLocalCookieStore0.remove((URI) null, (HttpCookie) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // cookie is null
         //
         verifyException("java.net.InMemoryCookieStore", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ThreadLocalCookieStore threadLocalCookieStore0 = new ThreadLocalCookieStore();
      List<HttpCookie> list0 = threadLocalCookieStore0.getCookies();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ThreadLocalCookieStore threadLocalCookieStore0 = new ThreadLocalCookieStore();
      ThreadLocalCookieStore threadLocalCookieStore1 = threadLocalCookieStore0.removeCurrent();
      assertSame(threadLocalCookieStore0, threadLocalCookieStore1);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ThreadLocalCookieStore threadLocalCookieStore0 = new ThreadLocalCookieStore();
      URI uRI0 = MockURI.aFTPURI;
      // Undeclared exception!
      try { 
        threadLocalCookieStore0.add(uRI0, (HttpCookie) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // cookie is null
         //
         verifyException("java.net.InMemoryCookieStore", e);
      }
  }
}
