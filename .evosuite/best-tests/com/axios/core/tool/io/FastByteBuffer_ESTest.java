/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 12 04:52:01 GMT 2024
 */

package com.axios.core.tool.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.axios.core.tool.io.FastByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FastByteBuffer_ESTest extends FastByteBuffer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FastByteBuffer fastByteBuffer0 = new FastByteBuffer(2424);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-25);
      byteArray0[2] = (byte)76;
      byteArray0[3] = (byte)1;
      // Undeclared exception!
      try { 
        fastByteBuffer0.append(byteArray0, (int) (byte) (-25), 2424);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.core.tool.io.FastByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FastByteBuffer fastByteBuffer0 = new FastByteBuffer(0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)63;
      byteArray0[2] = (byte) (-94);
      byteArray0[3] = (byte)0;
      fastByteBuffer0.append(byteArray0);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)127;
      byteArray0[6] = (byte) (-96);
      byteArray0[7] = (byte)0;
      FastByteBuffer fastByteBuffer1 = fastByteBuffer0.append(byteArray0);
      fastByteBuffer1.append(fastByteBuffer0);
      byte[] byteArray1 = fastByteBuffer0.array(0);
      fastByteBuffer0.append(byteArray1);
      fastByteBuffer0.size();
      fastByteBuffer1.toArray((int) (byte)63, 9994);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FastByteBuffer fastByteBuffer0 = new FastByteBuffer(1);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      FastByteBuffer fastByteBuffer1 = fastByteBuffer0.append(byteArray0);
      FastByteBuffer fastByteBuffer2 = fastByteBuffer1.append(byteArray0, 0, 0);
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte)0;
      fastByteBuffer1.append(byteArray1, 0, 1);
      byteArray0[1] = (byte) (-1);
      FastByteBuffer fastByteBuffer3 = fastByteBuffer0.append(byteArray0);
      fastByteBuffer0.offset();
      FastByteBuffer fastByteBuffer4 = fastByteBuffer3.append(byteArray0, 0, 2);
      fastByteBuffer1.size();
      FastByteBuffer fastByteBuffer5 = new FastByteBuffer();
      fastByteBuffer5.append(byteArray0);
      fastByteBuffer5.append(fastByteBuffer3);
      fastByteBuffer5.reset();
      fastByteBuffer0.append(fastByteBuffer5);
      fastByteBuffer3.offset();
      fastByteBuffer1.toArray();
      // Undeclared exception!
      fastByteBuffer4.append(fastByteBuffer2);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FastByteBuffer fastByteBuffer0 = new FastByteBuffer(0);
      fastByteBuffer0.size();
      FastByteBuffer fastByteBuffer1 = new FastByteBuffer();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)83;
      byteArray0[1] = (byte) (-45);
      byteArray0[2] = (byte) (-1);
      fastByteBuffer1.append(byteArray0);
      fastByteBuffer1.get(1);
      fastByteBuffer0.append(fastByteBuffer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FastByteBuffer fastByteBuffer0 = new FastByteBuffer();
      // Undeclared exception!
      try { 
        fastByteBuffer0.get(2431);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.core.tool.io.FastByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FastByteBuffer fastByteBuffer0 = new FastByteBuffer();
      FastByteBuffer fastByteBuffer1 = fastByteBuffer0.append((byte)1);
      fastByteBuffer0.append(fastByteBuffer1);
      byte[] byteArray0 = fastByteBuffer0.toArray(0, 127);
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)1;
      byteArray1[1] = (byte)1;
      byteArray1[2] = (byte)1;
      FastByteBuffer fastByteBuffer2 = fastByteBuffer1.append(byteArray1);
      fastByteBuffer0.get((byte)1);
      fastByteBuffer2.append(byteArray0, 1, (int) (byte)1);
      fastByteBuffer1.toArray(15, 127);
      // Undeclared exception!
      try { 
        fastByteBuffer1.toArray(2423, (int) (byte)1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.core.tool.io.FastByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FastByteBuffer fastByteBuffer0 = new FastByteBuffer(1);
      fastByteBuffer0.index();
      byte byte0 = (byte)22;
      FastByteBuffer fastByteBuffer1 = fastByteBuffer0.append((byte)22);
      fastByteBuffer1.append(fastByteBuffer0);
      // Undeclared exception!
      try { 
        fastByteBuffer0.array((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.axios.core.tool.io.FastByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FastByteBuffer fastByteBuffer0 = new FastByteBuffer();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-38);
      byteArray0[1] = (byte)42;
      byteArray0[2] = (byte) (-53);
      byte byte0 = (byte)1;
      byteArray0[3] = (byte)1;
      FastByteBuffer fastByteBuffer1 = fastByteBuffer0.append(byteArray0);
      fastByteBuffer1.append(byteArray0, 0, 0);
      fastByteBuffer0.array(1);
      // Undeclared exception!
      try { 
        fastByteBuffer0.append((byte[]) null, 1, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.core.tool.io.FastByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FastByteBuffer fastByteBuffer0 = new FastByteBuffer();
      FastByteBuffer fastByteBuffer1 = fastByteBuffer0.append((byte)0);
      fastByteBuffer0.index();
      fastByteBuffer1.append((byte) (-1));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FastByteBuffer fastByteBuffer0 = new FastByteBuffer(0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)76;
      fastByteBuffer0.append(byteArray0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 1;
      FastByteBuffer fastByteBuffer0 = new FastByteBuffer(1);
      fastByteBuffer0.reset();
      FastByteBuffer fastByteBuffer1 = fastByteBuffer0.append((byte) (-18));
      fastByteBuffer0.get(0);
      fastByteBuffer1.reset();
      // Undeclared exception!
      try { 
        fastByteBuffer1.append((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.core.tool.io.FastByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FastByteBuffer fastByteBuffer0 = new FastByteBuffer();
      fastByteBuffer0.reset();
      // Undeclared exception!
      try { 
        fastByteBuffer0.append((FastByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.core.tool.io.FastByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FastByteBuffer fastByteBuffer0 = new FastByteBuffer((-199));
      fastByteBuffer0.toArray();
      fastByteBuffer0.append((byte)0);
      // Undeclared exception!
      try { 
        fastByteBuffer0.toArray((-199), 1024);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FastByteBuffer fastByteBuffer0 = new FastByteBuffer(944);
      fastByteBuffer0.index();
      int int0 = 0;
      FastByteBuffer fastByteBuffer1 = new FastByteBuffer(0);
      FastByteBuffer fastByteBuffer2 = fastByteBuffer1.append(fastByteBuffer0);
      byte[] byteArray0 = new byte[0];
      FastByteBuffer fastByteBuffer3 = fastByteBuffer2.append(byteArray0);
      fastByteBuffer3.append(fastByteBuffer1);
      fastByteBuffer0.append(fastByteBuffer1);
      int int1 = (-920);
      // Undeclared exception!
      try { 
        fastByteBuffer1.toArray(944, (-920));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.core.tool.io.FastByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FastByteBuffer fastByteBuffer0 = new FastByteBuffer();
      fastByteBuffer0.reset();
      fastByteBuffer0.isEmpty();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)69;
      FastByteBuffer fastByteBuffer1 = fastByteBuffer0.append(byteArray0, 1, 1);
      FastByteBuffer fastByteBuffer2 = fastByteBuffer1.append((byte)0);
      fastByteBuffer2.reset();
      fastByteBuffer0.size();
      int int0 = (-1);
      fastByteBuffer2.size();
      fastByteBuffer0.toArray((-1), 0);
      fastByteBuffer0.offset();
      // Undeclared exception!
      try { 
        fastByteBuffer0.get((-701));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.core.tool.io.FastByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FastByteBuffer fastByteBuffer0 = new FastByteBuffer((-996));
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        fastByteBuffer0.append(byteArray0, (int) (byte)0, (-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.core.tool.io.FastByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FastByteBuffer fastByteBuffer0 = new FastByteBuffer();
      fastByteBuffer0.toArray();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FastByteBuffer fastByteBuffer0 = new FastByteBuffer();
      byte[] byteArray0 = new byte[0];
      fastByteBuffer0.append(byteArray0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FastByteBuffer fastByteBuffer0 = new FastByteBuffer(0);
      // Undeclared exception!
      try { 
        fastByteBuffer0.get(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.core.tool.io.FastByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FastByteBuffer fastByteBuffer0 = new FastByteBuffer(0);
      fastByteBuffer0.toArray(0, 0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FastByteBuffer fastByteBuffer0 = new FastByteBuffer();
      fastByteBuffer0.size();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = (-199);
      FastByteBuffer fastByteBuffer0 = new FastByteBuffer((-199));
      byte[] byteArray0 = fastByteBuffer0.toArray();
      FastByteBuffer fastByteBuffer1 = fastByteBuffer0.append((byte)0);
      // Undeclared exception!
      try { 
        fastByteBuffer1.append(byteArray0, (-199), (-199));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.core.tool.io.FastByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FastByteBuffer fastByteBuffer0 = new FastByteBuffer();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)30;
      // Undeclared exception!
      try { 
        fastByteBuffer0.append(byteArray0, (int) (byte)30, (int) (byte)30);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.core.tool.io.FastByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = 944;
      FastByteBuffer fastByteBuffer0 = new FastByteBuffer(944);
      fastByteBuffer0.index();
      int int1 = 0;
      FastByteBuffer fastByteBuffer1 = new FastByteBuffer(0);
      FastByteBuffer fastByteBuffer2 = fastByteBuffer1.append(fastByteBuffer0);
      byte[] byteArray0 = new byte[0];
      FastByteBuffer fastByteBuffer3 = fastByteBuffer2.append(byteArray0);
      FastByteBuffer fastByteBuffer4 = fastByteBuffer3.append(fastByteBuffer1);
      fastByteBuffer4.append((byte) (-1));
      FastByteBuffer fastByteBuffer5 = fastByteBuffer0.append(fastByteBuffer1);
      int int2 = (-920);
      // Undeclared exception!
      try { 
        fastByteBuffer5.get(9998);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.core.tool.io.FastByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FastByteBuffer fastByteBuffer0 = new FastByteBuffer();
      FastByteBuffer fastByteBuffer1 = new FastByteBuffer();
      FastByteBuffer fastByteBuffer2 = fastByteBuffer0.append(fastByteBuffer1);
      byte[] byteArray0 = null;
      int int0 = (-29);
      // Undeclared exception!
      try { 
        fastByteBuffer2.append((byte[]) null, 9980, (-29));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.core.tool.io.FastByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FastByteBuffer fastByteBuffer0 = new FastByteBuffer(1);
      FastByteBuffer fastByteBuffer1 = fastByteBuffer0.append((byte)69);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      FastByteBuffer fastByteBuffer2 = fastByteBuffer1.append(byteArray0);
      fastByteBuffer1.get(1);
      fastByteBuffer1.get(1);
      fastByteBuffer0.offset();
      fastByteBuffer0.append(byteArray0);
      fastByteBuffer1.offset();
      fastByteBuffer0.index();
      FastByteBuffer fastByteBuffer3 = fastByteBuffer1.append(byteArray0, 0, 1);
      fastByteBuffer3.toArray(2, (int) (byte)1);
      fastByteBuffer1.isEmpty();
      fastByteBuffer3.array(1);
      // Undeclared exception!
      fastByteBuffer2.append(fastByteBuffer3);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FastByteBuffer fastByteBuffer0 = new FastByteBuffer(1);
      FastByteBuffer fastByteBuffer1 = fastByteBuffer0.append((byte)69);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)69;
      FastByteBuffer fastByteBuffer2 = fastByteBuffer1.append(byteArray0);
      fastByteBuffer1.get(1);
      fastByteBuffer1.get(1);
      fastByteBuffer0.offset();
      fastByteBuffer0.append(byteArray0);
      fastByteBuffer1.offset();
      fastByteBuffer0.index();
      FastByteBuffer fastByteBuffer3 = fastByteBuffer1.append(byteArray0, 0, 1);
      fastByteBuffer3.toArray(2, (int) (byte)69);
      fastByteBuffer1.isEmpty();
      fastByteBuffer3.array(1);
      // Undeclared exception!
      fastByteBuffer2.append(fastByteBuffer3);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FastByteBuffer fastByteBuffer0 = new FastByteBuffer(1);
      FastByteBuffer fastByteBuffer1 = fastByteBuffer0.append((byte)69);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      FastByteBuffer fastByteBuffer2 = fastByteBuffer1.append(byteArray0);
      fastByteBuffer1.get(1);
      fastByteBuffer1.get(1);
      fastByteBuffer0.offset();
      fastByteBuffer0.append(byteArray0);
      fastByteBuffer1.offset();
      fastByteBuffer0.index();
      fastByteBuffer1.append((byte)18);
      FastByteBuffer fastByteBuffer3 = fastByteBuffer1.append(byteArray0, 0, 1);
      assertEquals(1, fastByteBuffer0.offset());
      
      fastByteBuffer3.reset();
      fastByteBuffer3.toArray(2, (int) (byte)1);
      fastByteBuffer1.isEmpty();
      fastByteBuffer3.array(1);
      fastByteBuffer2.append(fastByteBuffer3);
      assertEquals((-1), fastByteBuffer0.index());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FastByteBuffer fastByteBuffer0 = new FastByteBuffer();
      fastByteBuffer0.reset();
      fastByteBuffer0.isEmpty();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      FastByteBuffer fastByteBuffer1 = fastByteBuffer0.append(byteArray0, 1, 1);
      FastByteBuffer fastByteBuffer2 = fastByteBuffer1.append((byte)0);
      fastByteBuffer2.reset();
      fastByteBuffer0.size();
      int int0 = (-1);
      fastByteBuffer2.size();
      fastByteBuffer0.toArray((-1), 0);
      fastByteBuffer0.offset();
      // Undeclared exception!
      try { 
        fastByteBuffer0.get((-701));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.core.tool.io.FastByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FastByteBuffer fastByteBuffer0 = new FastByteBuffer(0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)63;
      byteArray0[2] = (byte) (-94);
      byteArray0[3] = (byte)0;
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)63;
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte)0;
      byteArray1[4] = (byte)0;
      byteArray1[5] = (byte)79;
      byteArray1[6] = (byte)0;
      fastByteBuffer0.append(byteArray1);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)127;
      byteArray0[6] = (byte) (-96);
      byteArray0[7] = (byte)0;
      FastByteBuffer fastByteBuffer1 = fastByteBuffer0.append(byteArray0);
      FastByteBuffer fastByteBuffer2 = fastByteBuffer1.append(fastByteBuffer0);
      fastByteBuffer2.append((byte)79);
      byte[] byteArray2 = fastByteBuffer0.array(0);
      fastByteBuffer0.append(byteArray2);
      fastByteBuffer1.toArray();
      fastByteBuffer1.isEmpty();
      FastByteBuffer fastByteBuffer3 = fastByteBuffer2.append((byte)125);
      byte byte0 = fastByteBuffer3.get(1024);
      assertFalse(fastByteBuffer0.isEmpty());
      assertEquals((byte)0, byte0);
  }
}
