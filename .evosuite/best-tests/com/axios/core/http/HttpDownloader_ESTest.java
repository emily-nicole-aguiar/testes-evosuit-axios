/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 12 05:23:52 GMT 2024
 */

package com.axios.core.http;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.axios.core.http.HttpDownloader;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.OutputStream;
import java.net.URI;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HttpDownloader_ESTest extends HttpDownloader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://com.xios.coe.ma.MapWapper/");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "Chunked");
      byte[] byteArray0 = HttpDownloader.downloadBytes("com.xios.coe.ma.MapWapper");
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        HttpDownloader.downloadString("com.axios.core.http.HttpDownloader", charset0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Server response error with status code: [404]
         //
         verifyException("com.axios.core.http.HttpDownloader", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        HttpDownloader.downloadString("[out] is null !", (Charset) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        HttpDownloader.downloadString("", (Charset) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // [url] is blank !
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      File file0 = MockFile.createTempFile("d5kFpP0", "d5kFpP0");
      // Undeclared exception!
      try { 
        HttpDownloader.downloadForFile("d5kFpP0", file0, (-2112));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Server response error with status code: [404]
         //
         verifyException("com.axios.core.http.HttpDownloader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://com.axios.core.http.HttpDownloader/");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "com.axios.core.http.HttpDownloader");
      MockFile mockFile0 = new MockFile((File) null, "");
      // Undeclared exception!
      HttpDownloader.downloadForFile("com.axios.core.http.HttpDownloader", mockFile0, 676);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      File file0 = MockFile.createTempFile("d5kFpP0", "d5kFpP0");
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://d5kFpP0/");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "Sjuf");
      // Undeclared exception!
      try { 
        HttpDownloader.downloadForFile("d5kFpP0", file0, (-2112));
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Gp]S^Z$AA-C~KRk1");
      // Undeclared exception!
      try { 
        HttpDownloader.downloadForFile("[url] is blank !", mockFile0, (-2115));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://com.xios.coe.ma.MapWapper/");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "Chunked");
      MockFile mockFile0 = new MockFile("");
      HttpDownloader httpDownloader0 = new HttpDownloader();
      // Undeclared exception!
      httpDownloader0.downloadFile("com.xios.coe.ma.MapWapper", (File) mockFile0, "", 69);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HttpDownloader httpDownloader0 = new HttpDownloader();
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      // Undeclared exception!
      try { 
        httpDownloader0.downloadFile(")2bwf$e(", (File) mockFile0, ")2bwf$e(", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://com.xios.coe.ma.MapWapper/");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "Chunked");
      MockFile mockFile0 = new MockFile("com.xios.coe.ma.MapWapper", "com.xios.coe.ma.MapWapper");
      mockFile0.mkdirs();
      // Undeclared exception!
      HttpDownloader.downloadFile("com.xios.coe.ma.MapWapper", (File) mockFile0, 2693);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://com.xios.coe.ma.MapWapper/");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "Chunked");
      MockFile mockFile0 = new MockFile("com.xios.coe.ma.MapWapper", "com.xios.coe.ma.MapWapper");
      // Undeclared exception!
      try { 
        HttpDownloader.downloadFile("com.xios.coe.ma.MapWapper", (File) mockFile0, 2693);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        HttpDownloader.downloadFile("Server response error with status code: [", (File) null, (-1267));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockFile mockFile0 = new MockFile("com.xios.coe.ma.MapWapper", "com.xios.coe.ma.MapWapper");
      // Undeclared exception!
      try { 
        HttpDownloader.downloadFile("", (File) mockFile0, 2693);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // [url] is blank !
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        HttpDownloader.downloadBytes("[out] is null !");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        HttpDownloader.downloadBytes("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // [url] is blank !
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://com.xios.coe.ma.MapWapper/");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "Chunked");
      MockFile mockFile0 = new MockFile("com.xios.coe.ma.MapWapper", "com.xios.coe.ma.MapWapper");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      // Undeclared exception!
      try { 
        HttpDownloader.download("com.xios.coe.ma.MapWapper", mockPrintStream0, true);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      // Undeclared exception!
      try { 
        HttpDownloader.download("Server response error with status code: [", byteArrayOutputStream0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        HttpDownloader.download("@(;h>R|V-;RjJ(?6E", (OutputStream) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // [out] is null !
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://com.axios.core.http.HttpDownloader/");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "com.axios.core.http.HttpDownloader");
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        HttpDownloader.downloadString("com.axios.core.http.HttpDownloader", charset0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MockFile mockFile0 = new MockFile("com.xios.coe.ma.MapWapper", "com.xios.coe.ma.MapWapper");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      // Undeclared exception!
      try { 
        HttpDownloader.download("com.xios.coe.ma.MapWapper", mockPrintStream0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Server response error with status code: [404]
         //
         verifyException("com.axios.core.http.HttpDownloader", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockFile mockFile0 = new MockFile("com.xios.coe.ma.MapWapper", "com.xios.coe.ma.MapWapper");
      // Undeclared exception!
      try { 
        HttpDownloader.downloadFile("com.xios.coe.ma.MapWapper", (File) mockFile0, 2693);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Server response error with status code: [404]
         //
         verifyException("com.axios.core.http.HttpDownloader", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      HttpDownloader httpDownloader0 = new HttpDownloader();
      // Undeclared exception!
      try { 
        httpDownloader0.downloadFile("com.xios.coe.ma.MapWapper", (File) mockFile0, "", 69);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Server response error with status code: [404]
         //
         verifyException("com.axios.core.http.HttpDownloader", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        HttpDownloader.downloadBytes("com.xios.coe.ma.MapWapper");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Server response error with status code: [404]
         //
         verifyException("com.axios.core.http.HttpDownloader", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      // Undeclared exception!
      try { 
        HttpDownloader.downloadForFile((String) null, mockFile0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // [url] is blank !
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HttpDownloader httpDownloader0 = new HttpDownloader();
      File file0 = MockFile.createTempFile("GET", "");
      // Undeclared exception!
      try { 
        httpDownloader0.downloadFile("", file0, "HTTP/1.0", (-1464));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // [url] is blank !
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }
}
