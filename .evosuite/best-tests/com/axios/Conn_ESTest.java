/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 12 04:29:30 GMT 2024
 */

package com.axios;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.axios.Conn;
import com.axios.core.http.HttpRequest;
import com.axios.core.requestMethod.RequestMethod;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.net.HttpURLConnection;
import java.nio.charset.Charset;
import java.nio.charset.IllegalCharsetNameException;
import java.nio.charset.UnsupportedCharsetException;
import java.nio.file.InvalidPathException;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Conn_ESTest extends Conn_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      String string0 = Conn.getMimeType("p.o", "*Xae#B:)v?&qg4s");
      assertEquals("application/octet-stream", string0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      String string0 = Conn.urlWithForm("HfT0868:^?vrS(t @", "https:", charset0, false);
      assertEquals("HfT0868:^?vrS(t @&https:", string0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      String string0 = Conn.urlWithForm("HfT08$68:^?vrS(* @", "http:http:$hp!%7F==", charset0, true);
      assertEquals("HfT08$68:^?vrS%28*+%40&http%3Ahttp%3A%24hp%21%257F==", string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      String string0 = Conn.urlWithForm((String) null, (Map<String, Object>) hashMap0, (Charset) null, true);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      String string0 = Conn.urlWithForm("", "", charset0, false);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("", "");
      Charset charset0 = Charset.defaultCharset();
      String string0 = Conn.toParams((Map<String, ?>) hashMap0, charset0, false);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      Integer integer0 = new Integer(0);
      hashMap0.put("", integer0);
      Charset charset0 = Charset.defaultCharset();
      String string0 = Conn.toParams((Map<String, ?>) hashMap0, charset0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      Integer integer0 = new Integer(0);
      hashMap0.put("", integer0);
      String string0 = Conn.toParams((Map<String, ?>) hashMap0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      boolean boolean0 = Conn.isHttps("https:pq\"ncbzhn&tv)a=nf}?PsAl/0G9\t{");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      boolean boolean0 = Conn.isHttp("http:");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Charset charset0 = Charset.defaultCharset();
      String string0 = Conn.getString((InputStream) byteArrayInputStream0, charset0, true);
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 61, 61);
      String string0 = Conn.getString((InputStream) byteArrayInputStream0, charset0, true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      String string0 = Conn.getMimeType("com.a");
      assertEquals("application/octet-stream", string0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HttpURLConnection httpURLConnection0 = mock(HttpURLConnection.class, new ViolatedAssumptionAnswer());
      doReturn(";charset=").when(httpURLConnection0).getContentType();
      String string0 = Conn.getCharset(httpURLConnection0);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      String string0 = Conn.getCharset(";charset=");
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.put("http:", (Object) null);
      // Undeclared exception!
      try { 
        Conn.urlWithForm("https:x==", (Map<String, Object>) hashMap0, (Charset) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        Conn.urlWithForm((String) null, "com.axios.Conn", charset0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.Conn", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      Charset charset0 = Charset.defaultCharset();
      hashMap0.put("utf-8", (String) null);
      // Undeclared exception!
      try { 
        Conn.toParams((Map<String, ?>) hashMap0, charset0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HashMap<String, InputStream> hashMap0 = new HashMap<String, InputStream>();
      hashMap0.put((String) null, (InputStream) null);
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        Conn.toParams((Map<String, ?>) hashMap0, charset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("", (String) null);
      // Undeclared exception!
      try { 
        Conn.toParams((Map<String, ?>) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        Conn.put("YB6@e<RTk%r*D", (Map<String, Object>) hashMap0, 61);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        Conn.put((String) null, (Map<String, Object>) hashMap0, 2879);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        Conn.put("});;Gs+c!W4|a", (Map<String, Object>) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.put((String) null, (Map<String, Object>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.put("com.axios.core.config.global.HttpGlobalConfig", "utf8", (-2911));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.net.UnknownServiceException: protocol doesn't support output
         //
         verifyException("com.axios.core.http.HttpRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.put((String) null, (String) null, (-3395));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.put("`'>#", "`'>#");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.put("", "==!8T<Ka=3~eV[RJ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Collection<Object> collection0 = hashMap0.values();
      hashMap0.put(" T,!/y75:%rS", collection0);
      // Undeclared exception!
      try { 
        Conn.post(" T,!/y75:%rS", (Map<String, Object>) hashMap0, 0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.post("https:qqjd6#3rh_y", (Map<String, Object>) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        Conn.post("", (Map<String, Object>) hashMap0, 3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Collection<Object> collection0 = hashMap0.values();
      hashMap0.put("gbk", collection0);
      // Undeclared exception!
      try { 
        Conn.post("HTTP/1.1", (Map<String, Object>) hashMap0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.post("http:4 bi,cd%;", (Map<String, Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        Conn.post("", (Map<String, Object>) hashMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.post("(3Rn16", "(3Rn16", 52);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.net.UnknownServiceException: protocol doesn't support output
         //
         verifyException("com.axios.core.http.HttpRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.post("", "com.axios.Conn", 2221);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.post("GET", "POST");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.net.UnknownServiceException: protocol doesn't support output
         //
         verifyException("com.axios.core.http.HttpRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.post("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        Conn.normalizeParams("", charset0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        Conn.normalizeParams((String) null, charset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.Conn", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.isHttps((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.Conn", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.isHttp((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.Conn", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      // Undeclared exception!
      try { 
        Conn.getString((InputStream) pipedInputStream0, (Charset) null, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Pipe not connected
         //
         verifyException("com.axios.core.tool.io.IoTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      Charset charset0 = Charset.forName("utf8");
      // Undeclared exception!
      try { 
        Conn.getString((InputStream) dataInputStream0, charset0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2551), 400);
      // Undeclared exception!
      try { 
        Conn.getString((InputStream) byteArrayInputStream0, charset0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.getMimeType("(\uFFFD_\u0002\u0007\u0005\u001AB\u0000", "(\uFFFD_\u0002\u0007\u0005\u001AB\u0000");
        fail("Expecting exception: InvalidPathException");
      
      } catch(InvalidPathException e) {
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.getMimeType((String) null, "charsets*=s*([a-z0-9-]*)");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.getMimeType("xr_~2O=a*&", "https");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.nio.file.Files$FileTypeDetectors
         //
         verifyException("java.nio.file.Files", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.getMimeType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.getMimeType("Cache-Control");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class java.nio.file.Files$FileTypeDetectors
         //
         verifyException("java.nio.file.Files", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        Conn.get("ya]f\"qt4'eY", (Map<String, Object>) hashMap0, 8);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal character in authority at index 7: http://ya]f\"qt4'eY/
         //
         verifyException("com.axios.core.tool.UrlTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        Conn.get("FYt", (Map<String, Object>) hashMap0, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.get("https:com.axios.core.resource.bytesresource", (Map<String, Object>) null, 838);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        Conn.get("h3<tDkUq,8(2#\"LX[$", (Map<String, Object>) hashMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal character in authority at index 7: http://h3<tDkUq,8(2/#%22LX%5B$
         //
         verifyException("com.axios.core.tool.UrlTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        Conn.get("http:4 bi,cd%;", (Map<String, Object>) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        Conn.get("", (Map<String, Object>) hashMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        Conn.get("b*s?ykv/`:P6Ge", charset0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        Conn.get("http:l", charset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        Conn.get("", charset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.get("File length is [", 3244);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal character in authority at index 7: http://File length is [/
         //
         verifyException("com.axios.core.tool.UrlTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.get("http:9-ib7=c~)uj~.3_e ?n", (-3907));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.get((String) null, 284);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.get("3S^pMd;R}|';9");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal character in authority at index 7: http://3S^pMd;R}|';9/
         //
         verifyException("com.axios.core.tool.UrlTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.get("http:http:$hp!%7F==");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.get((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        Conn.downloadString("GBK", charset0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Server response error with status code: [404]
         //
         verifyException("com.axios.core.http.HttpDownloader", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        Conn.downloadString((String) null, charset0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // [url] is blank !
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.downloadString("charsets*=s*([a-z0-9-]*)", "com.axios.core.tool.io.FastByteArrayOutputStream");
        fail("Expecting exception: UnsupportedCharsetException");
      
      } catch(UnsupportedCharsetException e) {
         //
         // com.axios.core.tool.io.FastByteArrayOutputStream
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      String string0 = ":ybsH?,N\\uL";
      // Undeclared exception!
      try { 
        Conn.downloadString(string0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.downloadString((String) null, "utf8");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // [url] is blank !
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://$/?C%22y1z?V%22%7BE(sx&");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "$?C\"y1z?V\"{E(sx&$?C\"y1z?V\"{E(sx&");
      // Undeclared exception!
      try { 
        Conn.downloadFileFromUrl("$?C\"y1z?V\"{E(sx&", "=");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.downloadFileFromUrl("Rb'", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.downloadFileFromUrl((String) null, "tjb2w");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // [url] is blank !
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.downloadFileFromUrl("http:", (File) null, 3);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Server response error with status code: [404]
         //
         verifyException("com.axios.core.http.HttpDownloader", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      MockFile mockFile0 = new MockFile("utf-8", "");
      // Undeclared exception!
      try { 
        Conn.downloadFileFromUrl("", (File) mockFile0, 377);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // [url] is blank !
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      MockFile mockFile0 = new MockFile("im$L6Wp:U*E:+%,");
      // Undeclared exception!
      try { 
        Conn.downloadFileFromUrl("im$L6Wp:U*E:+%,", (File) mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Ql2%$pqf(3jYxs", "Ql2%$pqf(3jYxs");
      // Undeclared exception!
      try { 
        Conn.downloadFileFromUrl("", (File) mockFile0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // [url] is blank !
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.downloadFile("ACCEPT", "ACCEPT");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Server response error with status code: [404]
         //
         verifyException("com.axios.core.http.HttpDownloader", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.downloadFile("", "Chs50~N[NSnW,");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // [url] is blank !
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.downloadFile("g{j&`0x;-eg{J\"J", (File) null, (-2773));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      MockFile mockFile0 = new MockFile("http:$hp!&b-x");
      // Undeclared exception!
      try { 
        Conn.downloadFile((String) null, (File) mockFile0, (-3164));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // [url] is blank !
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      MockFile mockFile0 = new MockFile((File) null, "xKZnY^u4s");
      // Undeclared exception!
      try { 
        Conn.downloadFile("E/@dw+,EBfX[h", (File) mockFile0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Server response error with status code: [404]
         //
         verifyException("com.axios.core.http.HttpDownloader", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      MockFile mockFile0 = new MockFile("^/Kq|$`A");
      // Undeclared exception!
      try { 
        Conn.downloadFile((String) null, (File) mockFile0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // [url] is blank !
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://HTTP/1.0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "HTTP/1.1");
      // Undeclared exception!
      try { 
        Conn.downloadBytes("HTTP/1.0");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.downloadBytes("Tg1I#lim~'/P^6Ca");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.downloadBytes("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // [url] is blank !
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      File file0 = MockFile.createTempFile("ugf-8", "ugf-8");
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      // Undeclared exception!
      try { 
        Conn.download("HTTP/1.1", mockPrintStream0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Server response error with status code: [404]
         //
         verifyException("com.axios.core.http.HttpDownloader", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("https:fri+", true);
      // Undeclared exception!
      try { 
        Conn.download("https:fri+", mockFileOutputStream0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.decodeParams("utf-8", "G");
        fail("Expecting exception: UnsupportedCharsetException");
      
      } catch(UnsupportedCharsetException e) {
         //
         // G
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.PUT;
      // Undeclared exception!
      try { 
        Conn.createRequest(requestMethod0, "http:`'>#");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.GET;
      // Undeclared exception!
      try { 
        Conn.createRequest(requestMethod0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.createPut("https:mn/c{2v:wz>he");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.createPut((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.createPost("X;b6WdQ2<Z");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.createPost("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.createPatch("PH*FD>hA7[aClsdmE;");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.createPatch((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.createOptions("PH*FD>hA7[aClsdmE;");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.createOptions("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.createHeader("http:http/1.1");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.createHeader((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.createGet("oaF^3'8v", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.createGet("", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.createGet("https:http/1.0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.createGet((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.createDelete(" z3:y}Wn#7!;)");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.createDelete("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      String string0 = Conn.getCharset(">G{mW");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      String string0 = Conn.urlWithForm("HfT08$68:^?vrS(* @", "", charset0, false);
      assertEquals("HfT08$68:^?vrS(* @", string0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      String string0 = Conn.urlWithForm((String) null, (String) null, charset0, false);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      Map<String, List<String>> map0 = (Map<String, List<String>>)Conn.decodeParams("CONTENT_DISPOSITION", charset0);
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      String string0 = Conn.normalizeParams("http:4 bi,cd%;", charset0);
      assertEquals("http%3A4+bi%2Ccd%25%3B", string0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      String string0 = Conn.normalizeParams("x==", charset0);
      assertEquals("x==", string0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      String string0 = Conn.encodeParams("htp:", charset0);
      assertNotNull(string0);
      assertEquals("htp:", string0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      String string0 = Conn.encodeParams("https:https:pq\"ncbzhn&tv)a=nf}?psal/0g9\t{", charset0);
      assertEquals("https:https:pq\"ncbzhn&tv)a=nf}?psal%2F0g9%09%7B", string0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      String string0 = Conn.encodeParams("charsets*=s*(ea-z0-I-]*)", charset0);
      assertEquals("charsets*=s*%28ea-z0-I-%5D*%29", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      MockFile mockFile0 = new MockFile("ETAG", "'vyb$m_m8/!");
      // Undeclared exception!
      try { 
        Conn.downloadFileFromUrl("y2Z~&*Op.`E0`l?lG4%", (File) mockFile0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal character in authority at index 7: http://y2Z~&*Op.`E0`l/?lG4%25
         //
         verifyException("com.axios.core.tool.UrlTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.getMimeType("\u0000");
        fail("Expecting exception: InvalidPathException");
      
      } catch(InvalidPathException e) {
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.get("GBK", (-779));
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      HttpRequest httpRequest0 = Conn.createGet("zH&y`j@\"}.kEJ~`:327", false);
      assertEquals("HTTP/1.1", httpRequest0.httpVersion());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.put("L3p", "", (-2721));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.post("com.a", (Map<String, Object>) null, 17);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.net.UnknownServiceException: protocol doesn't support output
         //
         verifyException("com.axios.core.http.HttpRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      String string0 = Conn.toParams((Map<String, ?>) null, charset0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      MockFile mockFile0 = new MockFile("https:com.axios.core.resource.fileresource");
      // Undeclared exception!
      try { 
        Conn.downloadFile("https:com.axios.core.resource.fileresource", (File) mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.downloadFileFromUrl("yhmyq^;(jVWze1Df", (File) null, 401);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.post("j6],tp", "j6],tp", 9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.put("GOA<F", (Map<String, Object>) null, (-35));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal character in authority at index 7: http://GOA<F/
         //
         verifyException("com.axios.core.tool.UrlTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      String string0 = Conn.toParams((Map<String, ?>) null, charset0, false);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      String string0 = Conn.getContentTypeByRequestBody("http:http:$hp!%7F==?http%3Ahttp%3A%24hp%21%257F==");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      String string0 = Conn.getContentTypeByRequestBody("[Assertion failed] - this argument is required; it must not be null");
      assertEquals("application/json", string0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      byte[] byteArray0 = new byte[0];
      String string0 = Conn.getString(byteArray0, charset0, true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      String string0 = Conn.getString(byteArray0, (Charset) null, false);
      assertEquals("\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      String string0 = Conn.getString((byte[]) null, charset0, true);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      String string0 = Conn.getCharset((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      String string0 = Conn.getCharset((HttpURLConnection) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      String string0 = Conn.urlWithForm("?Wx,t(D0nm)-J", "?Wx,t(D0nm)-J", charset0, true);
      assertEquals("?Wx,t(D0nm)-JWx%7F%2Ct%28D0nm%29-J", string0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      String string0 = Conn.urlWithForm("$?C\"y1z?V\"{E(sx&", "$?C\"y1z?V\"{E(sx&", charset0, false);
      assertEquals("$?C\"y1z?V\"{E(sx&$?C\"y1z?V\"{E(sx&", string0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      String string0 = Conn.urlWithForm("a|E0bQ<#sS+;ly?", "a|E0bQ<#sS+;ly?", charset0, true);
      assertEquals("a|E0bQ<#sS+;ly&a|E0bQ<#sS+;ly", string0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      String string0 = Conn.urlWithForm("C|?l", (Map<String, Object>) null, charset0, true);
      assertEquals("C|?l", string0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      String string0 = Conn.urlWithForm("", (Map<String, Object>) null, charset0, true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      Map<String, List<String>> map0 = (Map<String, List<String>>)Conn.decodeParams("", charset0);
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Map<String, List<String>> map0 = (Map<String, List<String>>)Conn.decodeParams("amp;", (String) null);
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.decodeParams("&>I ", "HTTP/1.1");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // HTTP/1.1
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      Map<CharSequence, CharSequence> map0 = Conn.decodeParamMap((String) null, charset0);
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      Map<CharSequence, CharSequence> map0 = Conn.decodeParamMap("l4", charset0);
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      String string0 = Conn.normalizeParams("r_~2O=a*&", charset0);
      assertEquals("r_~2O=a*", string0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      String string0 = Conn.normalizeParams("&>I ", charset0);
      assertEquals("=", string0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      String string0 = Conn.normalizeParams("http:http:$hp!&bx", charset0);
      assertEquals("http:http:$hp!%7F==", string0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      String string0 = Conn.normalizeParams("=", charset0);
      assertEquals("=", string0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      String string0 = Conn.urlWithForm("https:pq\"ncbzhn&tv)a=nf}", "PsAl/0G9\t{", charset0, true);
      assertEquals("https:pq\"ncbzhn&tv)a=nf}?PsAl/0G9\t{", string0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      String string0 = Conn.encodeParams("http:?", charset0);
      assertNotNull(string0);
      assertEquals("http:", string0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      String string0 = Conn.urlWithForm("HfT08$68:^?vrS(* @", "", charset0, true);
      assertEquals("HfT08$68:^?vrS%28*+%40", string0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      String string0 = Conn.encodeParams("", charset0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.downloadString("Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 Safari/537.36 Hutool", (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Server response error with status code: [404]
         //
         verifyException("com.axios.core.http.HttpDownloader", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.downloadString("utf-8", "http:http:$hp!&bx");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // http:http:$hp!&bx
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      HttpRequest httpRequest0 = Conn.createPut("amp;");
      assertEquals("HTTP/1.1", httpRequest0.httpVersion());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      HttpRequest httpRequest0 = Conn.createPatch("com.axios.core.http.HttpBase");
      assertEquals("UTF-8", httpRequest0.charset());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Conn conn0 = new Conn();
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.downloadFile("[xHnTQc}Obq\u0000Zh|EK", "IjYySePO");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        Conn.get((String) null, (Map<String, Object>) hashMap0, 2322);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Http url must be not blank!
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.get("com.a");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      HttpRequest httpRequest0 = Conn.createPost("?Wx,t(D0nm)-J");
      assertEquals(RequestMethod.POST, httpRequest0.getMethod());
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.get("3S^pMd;R}|';9", (Charset) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal character in authority at index 7: http://3S^pMd;R}|';9/
         //
         verifyException("com.axios.core.tool.UrlTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      HttpRequest httpRequest0 = Conn.createGet("ugf-8");
      assertEquals(RequestMethod.GET, httpRequest0.getMethod());
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.download("YTi-HP~Zn4Pm%", (OutputStream) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // [out] is null !
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      HttpRequest httpRequest0 = Conn.createHeader("g{j&`");
      assertEquals(RequestMethod.HEAD, httpRequest0.getMethod());
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.post("-KC.giKkO", "http:");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      boolean boolean0 = Conn.isHttps("http:gbk");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      RequestMethod requestMethod0 = RequestMethod.GET;
      HttpRequest httpRequest0 = Conn.createRequest(requestMethod0, "x!9-\"4iGqLWNxPAP");
      assertEquals("HTTP/1.1", httpRequest0.httpVersion());
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "4 bI,cD%;");
      // Undeclared exception!
      try { 
        Conn.downloadFile("Request Headers: ", (File) mockFile0, 63);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal character in authority at index 7: http://Request Headers/
         //
         verifyException("com.axios.core.tool.UrlTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      boolean boolean0 = Conn.isHttp("`'>#");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.put("la7Jhrr_,J~y+xA", (Map<String, Object>) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.net.UnknownServiceException: protocol doesn't support output
         //
         verifyException("com.axios.core.http.HttpRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        Conn.downloadString("https:http/1.0", charset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.put("PsAl/0G9\t{", "https:pq\"ncbzhn&tv)a=nf}?PsAl/0G9\t{");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.net.UnknownServiceException: protocol doesn't support output
         //
         verifyException("com.axios.core.http.HttpRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.downloadBytes("HTTP/1.0");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Server response error with status code: [404]
         //
         verifyException("com.axios.core.http.HttpDownloader", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.downloadFileFromUrl("$?C\"y1z?V\"{E(sx&", "=");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Server response error with status code: [404]
         //
         verifyException("com.axios.core.http.HttpDownloader", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      HttpRequest httpRequest0 = Conn.createDelete("HTTP/1.1");
      assertEquals("HTTP/1.1", httpRequest0.httpVersion());
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Conn.closeCookie();
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        Conn.getString((InputStream) null, charset0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // InputStream is null !
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.post("charsets*=s*([a-z0-9-]*)", (Map<String, Object>) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal character in hostname at index 15: http://charsets*=s*([a-z0-9-]*)/
         //
         verifyException("com.axios.core.tool.UrlTool", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      HttpRequest httpRequest0 = Conn.createOptions("#f~@p3VV81k>&]?qB");
      assertEquals("HTTP/1.1", httpRequest0.httpVersion());
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      String string0 = Conn.toParams((Map<String, ?>) hashMap0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      // Undeclared exception!
      try { 
        Conn.get("Connection", (Map<String, Object>) null);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }
}
