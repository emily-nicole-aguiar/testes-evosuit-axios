/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 05 02:01:11 GMT 2024
 */

package com.axios.exception;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.axios.exception.HttpException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HttpException_ESTest extends HttpException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HttpException httpException0 = null;
      try {
        httpException0 = new HttpException((Throwable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.exception.HttpException", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HttpException httpException0 = new HttpException(";Pf'2k{E=R{#Sk");
      HttpException httpException1 = new HttpException(httpException0);
      assertFalse(httpException1.equals((Object)httpException0));
  }
}
