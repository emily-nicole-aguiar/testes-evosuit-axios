/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 05 01:38:03 GMT 2024
 */

package com.axios.core.rfc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.axios.core.rfc.PercentCodec;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.BitSet;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PercentCodec_ESTest extends PercentCodec_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      BitSet bitSet0 = BitSet.valueOf(byteArray0);
      PercentCodec percentCodec0 = new PercentCodec(bitSet0);
      char[] charArray0 = new char[5];
      charArray0[2] = ' ';
      Charset charset0 = Charset.defaultCharset();
      PercentCodec percentCodec1 = percentCodec0.setEncodeSpaceAsPlus(true);
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      percentCodec1.encode(charBuffer0, charset0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      BitSet bitSet0 = BitSet.valueOf(byteArray0);
      PercentCodec percentCodec0 = new PercentCodec(bitSet0);
      char[] charArray0 = new char[5];
      charArray0[0] = '_';
      Charset charset0 = Charset.defaultCharset();
      PercentCodec percentCodec1 = percentCodec0.setEncodeSpaceAsPlus(true);
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      percentCodec1.encode(charBuffer0, charset0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      PercentCodec.of((CharSequence) charBuffer0);
      // Undeclared exception!
      try { 
        PercentCodec.of((CharSequence) charBuffer0);
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PercentCodec percentCodec0 = new PercentCodec((BitSet) null);
      // Undeclared exception!
      try { 
        percentCodec0.removeSafe('N');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.core.rfc.PercentCodec", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PercentCodec percentCodec0 = new PercentCodec();
      // Undeclared exception!
      try { 
        percentCodec0.orNew((PercentCodec) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.core.rfc.PercentCodec", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BitSet bitSet0 = new BitSet();
      PercentCodec percentCodec0 = new PercentCodec(bitSet0);
      PercentCodec percentCodec1 = new PercentCodec((BitSet) null);
      // Undeclared exception!
      try { 
        percentCodec0.or(percentCodec1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        PercentCodec.of((CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.core.rfc.PercentCodec", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PercentCodec percentCodec0 = new PercentCodec((BitSet) null);
      // Undeclared exception!
      try { 
        PercentCodec.of(percentCodec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.core.rfc.PercentCodec", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      PercentCodec percentCodec0 = new PercentCodec();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2502);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      String string0 = percentCodec0.encode(charBuffer0, charset0);
      // Undeclared exception!
      percentCodec0.encode(string0, charset0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PercentCodec percentCodec0 = new PercentCodec((BitSet) null);
      // Undeclared exception!
      try { 
        percentCodec0.addSafe('6');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.core.rfc.PercentCodec", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      BitSet bitSet0 = BitSet.valueOf(byteArray0);
      PercentCodec percentCodec0 = new PercentCodec(bitSet0);
      PercentCodec percentCodec1 = percentCodec0.or(percentCodec0);
      assertSame(percentCodec1, percentCodec0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PercentCodec percentCodec0 = new PercentCodec();
      char[] charArray0 = new char[3];
      charArray0[0] = '6';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Charset charset0 = Charset.defaultCharset();
      percentCodec0.addSafe('6');
      String string0 = percentCodec0.encode(charBuffer0, charset0);
      assertEquals("6%00%00", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PercentCodec percentCodec0 = new PercentCodec();
      Charset charset0 = Charset.defaultCharset();
      String string0 = percentCodec0.encode((CharSequence) null, charset0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PercentCodec percentCodec0 = new PercentCodec();
      String string0 = percentCodec0.encode("", (Charset) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PercentCodec percentCodec0 = new PercentCodec();
      PercentCodec percentCodec1 = percentCodec0.orNew(percentCodec0);
      assertNotSame(percentCodec1, percentCodec0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PercentCodec percentCodec0 = new PercentCodec();
      PercentCodec percentCodec1 = PercentCodec.of(percentCodec0);
      assertNotSame(percentCodec0, percentCodec1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PercentCodec percentCodec0 = new PercentCodec();
      PercentCodec percentCodec1 = percentCodec0.removeSafe('Q');
      assertSame(percentCodec1, percentCodec0);
  }
}
