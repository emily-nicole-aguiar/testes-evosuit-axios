/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 05 01:55:58 GMT 2024
 */

package com.axios.core.http;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.axios.core.http.HttpDownloader;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.OutputStream;
import java.net.URI;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HttpDownloader_ESTest extends HttpDownloader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http:/");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "Path segment must be not null!");
      byte[] byteArray0 = HttpDownloader.downloadBytes("?");
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        HttpDownloader.downloadString("com.axios.core.http.HttpDownloader", charset0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Server response error with status code: [404]
         //
         verifyException("com.axios.core.http.HttpDownloader", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        HttpDownloader.downloadString("[out] is null !", (Charset) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        HttpDownloader.downloadString("", (Charset) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // [url] is blank !
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        HttpDownloader.downloadForFile("c@m.axios.cor.http.HttpDownlader", (File) null, 81);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Server response error with status code: [404]
         //
         verifyException("com.axios.core.http.HttpDownloader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://com.axios.core.http.HttpDownloader/");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "com.axios.core.http.HttpDownloader");
      MockFile mockFile0 = new MockFile("");
      // Undeclared exception!
      HttpDownloader.downloadForFile("com.axios.core.http.HttpDownloader", mockFile0, 2);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http:/");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      MockFile mockFile0 = new MockFile("wvdd@0w1j+~L@'");
      // Undeclared exception!
      try { 
        HttpDownloader.downloadForFile("wvdd@0w1j+~L@'", mockFile0, (-3352));
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Gp]S^Z$AA-C~KRk1");
      // Undeclared exception!
      try { 
        HttpDownloader.downloadForFile("[url] is blank !", mockFile0, (-2115));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HttpDownloader httpDownloader0 = new HttpDownloader();
      MockFile mockFile0 = new MockFile("[url] is blank !");
      // Undeclared exception!
      try { 
        httpDownloader0.downloadFile("com.axios.response.HttpResponse", (File) mockFile0, (String) null, 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Server response error with status code: [404]
         //
         verifyException("com.axios.core.http.HttpDownloader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://com.axios.core.http.HttpDownloader/");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "com.axios.core.http.HttpDownloader");
      HttpDownloader httpDownloader0 = new HttpDownloader();
      MockFile mockFile0 = new MockFile("", "");
      // Undeclared exception!
      httpDownloader0.downloadFile("com.axios.core.http.HttpDownloader", (File) mockFile0, "", 406);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HttpDownloader httpDownloader0 = new HttpDownloader();
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      // Undeclared exception!
      try { 
        httpDownloader0.downloadFile(")2bwf$e(", (File) mockFile0, ")2bwf$e(", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://com.axios.core.http.HttpDownloader/");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "com.axios.core.http.HttpDownloader");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("com.axios.core.http.HttpDownloader/[out] is null !/[out] is null !.[out] is null !");
      FileSystemHandling.createFolder(evoSuiteFile0);
      MockFile mockFile0 = new MockFile("com.axios.core.http.HttpDownloader", "[out] is null !");
      // Undeclared exception!
      HttpDownloader.downloadFile("com.axios.core.http.HttpDownloader", (File) mockFile0, 2016);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http:/");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "Path segment must be not null!");
      MockFile mockFile0 = new MockFile("Path segment must be not null!", "?");
      // Undeclared exception!
      try { 
        HttpDownloader.downloadFile("?", (File) mockFile0, 300);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        HttpDownloader.downloadFile("Server response error with status code: [", (File) null, (-1267));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      // Undeclared exception!
      try { 
        HttpDownloader.downloadFile("", (File) mockFile0, (-317));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // [url] is blank !
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        HttpDownloader.downloadBytes("lbDZGzW");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Server response error with status code: [404]
         //
         verifyException("com.axios.core.http.HttpDownloader", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        HttpDownloader.downloadBytes("BvyE1y\u00059&!!LX");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http:/");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "Path segment must be not null!");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("OPTIONS", false);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0);
      // Undeclared exception!
      try { 
        HttpDownloader.download("?", mockPrintStream0, false);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      // Undeclared exception!
      try { 
        HttpDownloader.download("Server response error with status code: [", byteArrayOutputStream0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        HttpDownloader.download("@(;h>R|V-;RjJ(?6E", (OutputStream) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // [out] is null !
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://com.axios.core.http.HttpDownloader/");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "com.axios.core.http.HttpDownloader");
      Charset charset0 = Charset.defaultCharset();
      // Undeclared exception!
      try { 
        HttpDownloader.downloadString("com.axios.core.http.HttpDownloader", charset0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(548);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, false);
      // Undeclared exception!
      try { 
        HttpDownloader.download("HTTP/1.1", mockPrintStream0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Server response error with status code: [404]
         //
         verifyException("com.axios.core.http.HttpDownloader", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Path segment must be not null!", "?");
      // Undeclared exception!
      try { 
        HttpDownloader.downloadFile("?", (File) mockFile0, 300);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Server response error with status code: [404]
         //
         verifyException("com.axios.core.http.HttpDownloader", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        HttpDownloader.downloadBytes("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // [url] is blank !
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      // Undeclared exception!
      try { 
        HttpDownloader.downloadForFile((String) null, mockFile0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // [url] is blank !
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HttpDownloader httpDownloader0 = new HttpDownloader();
      File file0 = MockFile.createTempFile("GET", "");
      // Undeclared exception!
      try { 
        httpDownloader0.downloadFile("", file0, "HTTP/1.0", (-1464));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // [url] is blank !
         //
         verifyException("com.axios.core.assertion.Assert", e);
      }
  }
}
