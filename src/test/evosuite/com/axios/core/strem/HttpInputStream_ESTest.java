/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 05 01:40:02 GMT 2024
 */

package com.axios.core.strem;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.axios.core.connection.Connection;
import com.axios.core.strem.HttpInputStream;
import com.axios.response.HttpResponse;
import java.io.IOException;
import java.net.Proxy;
import java.net.URL;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HttpInputStream_ESTest extends HttpInputStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      URL uRL0 = MockURL.getHttpExample();
      Connection connection0 = new Connection(uRL0, (Proxy) null);
      Charset charset0 = Charset.defaultCharset();
      HttpResponse httpResponse0 = new HttpResponse(connection0, charset0, true, true);
      HttpInputStream httpInputStream0 = new HttpInputStream(httpResponse0);
      byte[] byteArray0 = new byte[0];
      int int0 = httpInputStream0.read(byteArray0, 0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      URL uRL0 = MockURL.getHttpExample();
      Connection connection0 = new Connection(uRL0, (Proxy) null);
      HttpResponse httpResponse0 = new HttpResponse(connection0, (Charset) null, true, true);
      HttpInputStream httpInputStream0 = new HttpInputStream(httpResponse0);
      byte[] byteArray0 = new byte[1];
      int int0 = httpInputStream0.read(byteArray0, 0, (int) (byte)1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      Connection connection0 = new Connection(uRL0, (Proxy) null);
      Connection connection1 = connection0.connect();
      HttpResponse httpResponse0 = new HttpResponse(connection1, (Charset) null, true, true);
      HttpInputStream httpInputStream0 = new HttpInputStream(httpResponse0);
      long long0 = httpInputStream0.skip(2495L);
      assertEquals(35L, long0);
      
      int int0 = httpInputStream0.read();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "c");
      URL uRL0 = MockURL.getHttpExample();
      Connection connection0 = new Connection(uRL0, (Proxy) null);
      HttpResponse httpResponse0 = new HttpResponse(connection0, (Charset) null, false, true);
      HttpInputStream httpInputStream0 = new HttpInputStream(httpResponse0);
      boolean boolean0 = httpInputStream0.markSupported();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      Connection connection0 = new Connection(uRL0, (Proxy) null);
      Connection connection1 = connection0.connect();
      HttpResponse httpResponse0 = new HttpResponse(connection1, (Charset) null, false, true);
      HttpInputStream httpInputStream0 = new HttpInputStream(httpResponse0);
      int int0 = httpInputStream0.available();
      assertEquals(35, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "c");
      URL uRL0 = MockURL.getHttpExample();
      Connection connection0 = new Connection(uRL0, (Proxy) null);
      HttpResponse httpResponse0 = new HttpResponse(connection0, (Charset) null, false, true);
      HttpInputStream httpInputStream0 = new HttpInputStream(httpResponse0);
      try { 
        httpInputStream0.skip(200);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.util.ByteDataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "c");
      URL uRL0 = MockURL.getHttpExample();
      Connection connection0 = new Connection(uRL0, (Proxy) null);
      HttpResponse httpResponse0 = new HttpResponse(connection0, (Charset) null, false, true);
      HttpInputStream httpInputStream0 = new HttpInputStream(httpResponse0);
      try { 
        httpInputStream0.reset();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // mark/reset not supported
         //
         verifyException("org.evosuite.runtime.util.ByteDataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      Connection connection0 = new Connection(uRL0, (Proxy) null);
      Connection connection1 = connection0.connect();
      HttpResponse httpResponse0 = new HttpResponse(connection1, (Charset) null, false, true);
      HttpInputStream httpInputStream0 = new HttpInputStream(httpResponse0);
      // Undeclared exception!
      try { 
        httpInputStream0.read((byte[]) null, 404, 404);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "c");
      URL uRL0 = MockURL.getHttpExample();
      Connection connection0 = new Connection(uRL0, (Proxy) null);
      HttpResponse httpResponse0 = new HttpResponse(connection0, (Charset) null, false, true);
      HttpInputStream httpInputStream0 = new HttpInputStream(httpResponse0);
      try { 
        httpInputStream0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.util.ByteDataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "c");
      URL uRL0 = MockURL.getHttpExample();
      Connection connection0 = new Connection(uRL0, (Proxy) null);
      HttpResponse httpResponse0 = new HttpResponse(connection0, (Charset) null, false, true);
      HttpInputStream httpInputStream0 = new HttpInputStream(httpResponse0);
      try { 
        httpInputStream0.available();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.util.ByteDataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HttpInputStream httpInputStream0 = null;
      try {
        httpInputStream0 = new HttpInputStream((HttpResponse) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.core.strem.HttpInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      Connection connection0 = new Connection(uRL0, (Proxy) null);
      Connection connection1 = connection0.connect();
      HttpResponse httpResponse0 = new HttpResponse(connection1, (Charset) null, true, true);
      HttpInputStream httpInputStream0 = new HttpInputStream(httpResponse0);
      httpInputStream0.close();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      Connection connection0 = new Connection(uRL0, (Proxy) null);
      Connection connection1 = connection0.connect();
      HttpResponse httpResponse0 = new HttpResponse(connection1, (Charset) null, false, true);
      httpResponse0.status = 68;
      HttpInputStream httpInputStream0 = null;
      try {
        httpInputStream0 = new HttpInputStream(httpResponse0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("com.axios.core.strem.HttpInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      Connection connection0 = new Connection(uRL0, (Proxy) null);
      Connection connection1 = connection0.connect();
      HttpResponse httpResponse0 = new HttpResponse(connection1, (Charset) null, false, true);
      HttpInputStream httpInputStream0 = new HttpInputStream(httpResponse0);
      httpInputStream0.mark(404);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      Connection connection0 = new Connection(uRL0, (Proxy) null);
      Connection connection1 = connection0.connect();
      HttpResponse httpResponse0 = new HttpResponse(connection1, (Charset) null, false, true);
      HttpInputStream httpInputStream0 = new HttpInputStream(httpResponse0);
      httpInputStream0.reset();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      URL uRL0 = MockURL.getHttpExample();
      Connection connection0 = new Connection(uRL0, (Proxy) null);
      HttpResponse httpResponse0 = new HttpResponse(connection0, (Charset) null, true, true);
      HttpInputStream httpInputStream0 = new HttpInputStream(httpResponse0);
      int int0 = httpInputStream0.available();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      URL uRL0 = MockURL.getHttpExample();
      Connection connection0 = new Connection(uRL0, (Proxy) null);
      HttpResponse httpResponse0 = new HttpResponse(connection0, (Charset) null, true, true);
      HttpInputStream httpInputStream0 = new HttpInputStream(httpResponse0);
      long long0 = httpInputStream0.skip((-1));
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      Connection connection0 = new Connection(uRL0, (Proxy) null);
      Connection connection1 = connection0.connect();
      HttpResponse httpResponse0 = new HttpResponse(connection1, (Charset) null, false, true);
      HttpInputStream httpInputStream0 = new HttpInputStream(httpResponse0);
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try { 
        httpInputStream0.read(byteArray0, (int) (byte)0, 404);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      Connection connection0 = new Connection(uRL0, (Proxy) null);
      Connection connection1 = connection0.connect();
      HttpResponse httpResponse0 = new HttpResponse(connection1, (Charset) null, false, true);
      HttpInputStream httpInputStream0 = new HttpInputStream(httpResponse0);
      int int0 = httpInputStream0.read();
      assertEquals(69, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      Connection connection0 = new Connection(uRL0, (Proxy) null);
      Connection connection1 = connection0.connect();
      HttpResponse httpResponse0 = new HttpResponse(connection1, (Charset) null, false, true);
      HttpInputStream httpInputStream0 = new HttpInputStream(httpResponse0);
      boolean boolean0 = httpInputStream0.markSupported();
      assertTrue(boolean0);
  }
}
