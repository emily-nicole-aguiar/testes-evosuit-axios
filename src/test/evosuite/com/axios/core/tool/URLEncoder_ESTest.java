/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 12 05:03:41 GMT 2024
 */

package com.axios.core.tool;

import org.junit.Test;
import static org.junit.Assert.*;
import com.axios.core.tool.URLEncoder;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class URLEncoder_ESTest extends URLEncoder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      URLEncoder uRLEncoder0 = new URLEncoder();
      assertNotNull(uRLEncoder0);
      
      Charset charset0 = Charset.defaultCharset();
      assertNotNull(charset0);
      assertEquals("UTF-8", charset0.toString());
      assertTrue(charset0.canEncode());
      assertTrue(charset0.isRegistered());
      assertEquals("UTF-8", charset0.name());
      assertEquals("UTF-8", charset0.displayName());
      
      String string0 = uRLEncoder0.encode("", charset0);
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals("UTF-8", charset0.toString());
      assertTrue(charset0.canEncode());
      assertTrue(charset0.isRegistered());
      assertEquals("UTF-8", charset0.name());
      assertEquals("UTF-8", charset0.displayName());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      URLEncoder uRLEncoder0 = URLEncoder.QUERY;
      assertNotNull(uRLEncoder0);
      
      uRLEncoder0.setEncodeSpaceAsPlus(true);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      URLEncoder uRLEncoder0 = new URLEncoder();
      assertNotNull(uRLEncoder0);
      
      uRLEncoder0.addSafeCharacter('v');
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      URLEncoder uRLEncoder0 = new URLEncoder();
      assertNotNull(uRLEncoder0);
      
      Charset charset0 = Charset.defaultCharset();
      assertNotNull(charset0);
      assertTrue(charset0.isRegistered());
      assertEquals("UTF-8", charset0.name());
      assertEquals("UTF-8", charset0.displayName());
      assertEquals("UTF-8", charset0.toString());
      assertTrue(charset0.canEncode());
      
      String string0 = uRLEncoder0.encode("?N5_Dce8", charset0);
      assertEquals("%3FN5%5FDce8", string0);
      assertNotNull(string0);
      assertTrue(charset0.isRegistered());
      assertEquals("UTF-8", charset0.name());
      assertEquals("UTF-8", charset0.displayName());
      assertEquals("UTF-8", charset0.toString());
      assertTrue(charset0.canEncode());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      URLEncoder uRLEncoder0 = URLEncoder.createQuery();
      assertNotNull(uRLEncoder0);
      
      Charset charset0 = Charset.defaultCharset();
      assertNotNull(charset0);
      assertEquals("UTF-8", charset0.toString());
      assertTrue(charset0.canEncode());
      assertEquals("UTF-8", charset0.name());
      assertEquals("UTF-8", charset0.displayName());
      assertTrue(charset0.isRegistered());
      
      String string0 = uRLEncoder0.encode("UAr VB7 bl*aunkl!", charset0);
      assertEquals("UAr+VB7+bl*aunkl%21", string0);
      assertNotNull(string0);
      assertEquals("UTF-8", charset0.toString());
      assertTrue(charset0.canEncode());
      assertEquals("UTF-8", charset0.name());
      assertEquals("UTF-8", charset0.displayName());
      assertTrue(charset0.isRegistered());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      URLEncoder uRLEncoder0 = URLEncoder.QUERY;
      assertNotNull(uRLEncoder0);
      
      String string0 = uRLEncoder0.encode("0@p\"u2Vo@iK-7B", (Charset) null);
      assertEquals("0@p\"u2Vo@iK-7B", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      URLEncoder uRLEncoder0 = URLEncoder.createQuery();
      Charset charset0 = Charset.defaultCharset();
      String string0 = uRLEncoder0.encode((String) null, charset0);
      assertNull(string0);
  }
}
