/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 05 01:59:44 GMT 2024
 */

package com.axios.request;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.axios.request.Body;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Body_ESTest extends Body_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Body body0 = new Body();
      body0.setBody((Map<String, Object>) null);
      Map<String, Object> map0 = body0.getBody();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Body body0 = new Body();
      body0.add("y6'", "y6'");
      Map<String, Object> map0 = body0.getBody();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Body body0 = new Body();
      body0.add("uBYP4mY_>;D'4qX 2@h", (Object) null);
      // Undeclared exception!
      try { 
        body0.toBody();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Body body0 = new Body();
      body0.setBody((Map<String, Object>) null);
      // Undeclared exception!
      try { 
        body0.add("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.axios.request.Body", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Body body0 = new Body();
      Map<String, Object> map0 = body0.getBody();
      body0.setBody(map0);
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Body body0 = new Body();
      Body body1 = body0.add("y6'", "y6'");
      String string0 = body1.toBody();
      assertNotNull(string0);
  }
}
