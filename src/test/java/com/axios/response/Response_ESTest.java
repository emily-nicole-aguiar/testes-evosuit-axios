/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 05 02:02:22 GMT 2024
 */

package com.axios.response;

import org.junit.Test;
import static org.junit.Assert.*;
import com.axios.response.Response;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Response_ESTest extends Response_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Response response0 = new Response();
      int int0 = response0.getStatus();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Response response0 = new Response(3197, (Map<String, List<String>>) null, "");
      int int0 = response0.getStatus();
      assertEquals(3197, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Response response0 = new Response();
      Map<String, List<String>> map0 = response0.getHeaders();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      Response response0 = new Response((-2066), hashMap0, "+'T!E%|D&{|g2<,G?|");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      hashMap0.put("+'T!E%|D&{|g2<,G?|", linkedList0);
      response0.getHeaders();
      assertEquals((-2066), response0.getStatus());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Response response0 = new Response(0, (Map<String, List<String>>) null, "");
      response0.getData();
      assertEquals(0, response0.getStatus());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      Response response0 = new Response((-1752), hashMap0, "| dat%='");
      response0.getHeaders();
      assertEquals((-1752), response0.getStatus());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      Response response0 = new Response((-1752), hashMap0, "| dat%='");
      response0.getData();
      assertEquals((-1752), response0.getStatus());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      Response response0 = new Response((-1752), hashMap0, "| dat%='");
      int int0 = response0.getStatus();
      assertEquals((-1752), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Response response0 = new Response();
      String string0 = response0.getData();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      Response response0 = new Response((-1752), hashMap0, "| dat%='");
      response0.setData("Response{status=-1752, headers={}, data='| dat%=''}");
      assertEquals((-1752), response0.getStatus());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      Response response0 = new Response((-1752), hashMap0, "| dat%='");
      response0.setHeaders(hashMap0);
      assertEquals((-1752), response0.getStatus());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      Response response0 = new Response((-1752), hashMap0, "| dat%='");
      response0.setStatus((-1752));
      assertEquals((-1752), response0.getStatus());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      Response response0 = new Response((-1752), hashMap0, "| dat%='");
      String string0 = response0.toString();
      assertEquals("Response{status=-1752, headers={}, data='| dat%=''}", string0);
  }
}
