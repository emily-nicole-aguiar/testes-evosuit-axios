/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 05 01:36:43 GMT 2024
 */

package com.axios.core.tool;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.axios.core.tool.URLEncoder;
import java.nio.charset.Charset;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class URLEncoder_ESTest extends URLEncoder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      URLEncoder.createQuery();
      // Undeclared exception!
      try { 
        URLEncoder.createQuery();
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      URLEncoder uRLEncoder0 = new URLEncoder();
      Charset charset0 = Charset.defaultCharset();
      String string0 = uRLEncoder0.encode((String) null, charset0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      URLEncoder uRLEncoder0 = new URLEncoder();
      Charset charset0 = Charset.defaultCharset();
      String string0 = uRLEncoder0.encode("a@|w X9N,2EP,i", charset0);
      assertEquals("a%40%7Cw%20X9N%2C2EP%2Ci", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      URLEncoder uRLEncoder0 = URLEncoder.QUERY;
      Charset charset0 = Charset.defaultCharset();
      String string0 = uRLEncoder0.QUERY.encode("0@p\"u2Vo@iK-7B", charset0);
      assertEquals("0%40p%22u2Vo%40iK-7B", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      URLEncoder uRLEncoder0 = URLEncoder.QUERY;
      Charset charset0 = Charset.defaultCharset();
      String string0 = uRLEncoder0.encode("", charset0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      URLEncoder uRLEncoder0 = URLEncoder.QUERY;
      String string0 = uRLEncoder0.encode("0@p\"u2Vo@iK-7B", (Charset) null);
      assertEquals("0@p\"u2Vo@iK-7B", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      URLEncoder uRLEncoder0 = URLEncoder.createQuery();
      Charset charset0 = Charset.defaultCharset();
      String string0 = uRLEncoder0.encode("UArl s blaZnkl!", charset0);
      assertEquals("UArl+s+blaZnkl%21", string0);
  }
}
