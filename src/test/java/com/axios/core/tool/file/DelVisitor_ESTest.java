/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 05 02:00:24 GMT 2024
 */

package com.axios.core.tool.file;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.axios.core.tool.file.DelVisitor;
import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.attribute.BasicFileAttributes;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockIOException;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DelVisitor_ESTest extends DelVisitor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DelVisitor delVisitor0 = DelVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        delVisitor0.postVisitDirectory((Path) null, (IOException) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.file.Files", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BasicFileAttributes basicFileAttributes0 = mock(BasicFileAttributes.class, new ViolatedAssumptionAnswer());
      DelVisitor delVisitor0 = new DelVisitor();
      // Undeclared exception!
      try { 
        delVisitor0.visitFile((Path) null, basicFileAttributes0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.file.Files", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DelVisitor delVisitor0 = new DelVisitor();
      MockThrowable mockThrowable0 = new MockThrowable("");
      MockIOException mockIOException0 = new MockIOException("", mockThrowable0);
      try { 
        delVisitor0.postVisitDirectory((Path) null, (IOException) mockIOException0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }
}
