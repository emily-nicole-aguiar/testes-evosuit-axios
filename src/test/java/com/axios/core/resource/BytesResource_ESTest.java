/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 05 01:58:18 GMT 2024
 */

package com.axios.core.resource;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.axios.core.resource.BytesResource;
import java.io.InputStream;
import java.net.URL;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BytesResource_ESTest extends BytesResource_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BytesResource bytesResource0 = new BytesResource((byte[]) null, "}<V*oN'(Cn");
      Charset charset0 = Charset.defaultCharset();
      String string0 = bytesResource0.readStr(charset0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      BytesResource bytesResource0 = new BytesResource(byteArray0);
      Charset charset0 = Charset.defaultCharset();
      String string0 = bytesResource0.readStr(charset0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BytesResource bytesResource0 = new BytesResource((byte[]) null, "}<V*oN'(Cn");
      byte[] byteArray0 = bytesResource0.readBytes();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      BytesResource bytesResource0 = new BytesResource(byteArray0, "jrMJza3B$-M");
      byte[] byteArray1 = bytesResource0.readBytes();
      assertSame(byteArray0, byteArray1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BytesResource bytesResource0 = new BytesResource((byte[]) null, "}<V*oN'(Cn");
      String string0 = bytesResource0.getName();
      assertEquals("}<V*oN'(Cn", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      BytesResource bytesResource0 = new BytesResource(byteArray0, "");
      String string0 = bytesResource0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BytesResource bytesResource0 = new BytesResource((byte[]) null, "6j");
      // Undeclared exception!
      try { 
        bytesResource0.getStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      BytesResource bytesResource0 = new BytesResource(byteArray0, (String) null);
      String string0 = bytesResource0.readStr((Charset) null);
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      BytesResource bytesResource0 = new BytesResource(byteArray0, (String) null);
      URL uRL0 = bytesResource0.getUrl();
      assertNull(uRL0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      BytesResource bytesResource0 = new BytesResource(byteArray0, (String) null);
      byte[] byteArray1 = bytesResource0.readBytes();
      assertSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      BytesResource bytesResource0 = new BytesResource(byteArray0, (String) null);
      InputStream inputStream0 = bytesResource0.getStream();
      assertEquals(12, inputStream0.available());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      BytesResource bytesResource0 = new BytesResource(byteArray0, (String) null);
      String string0 = bytesResource0.getName();
      assertNull(string0);
  }
}
